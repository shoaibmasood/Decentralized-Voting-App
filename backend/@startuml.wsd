@startuml
' -- generated by: https://marketplace.visualstudio.com/items?itemName=tintinweb.solidity-visual-auditor
'
' -- for auto-render install: https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml
' -- options --

' --struct--
struct Candidate
struct Voter
Candidate --> Voting 
Voter --> Voting

Candidate  : [[uint256]] registerId
Candidate  : [[String]] name
Candidate  : [[uint256]] age
Candidate  : [[address]] candidateAddress
Candidate  : [[uint256]] voteCount
Candidate  : [[String]] ipfsHash

Voter : [[uint256]] registerId
Voter : [[String]]  name
Voter : [[uint256]] age
Voter : [[address]] votersAddress
Voter : [[bool]] hasVoted
Voter : [[String]] ipfsHash
Voter : [[uint256]] votedFor
Voter : [[uint256]] voterAllowed



' -- classes --


class Voting {
    ' -- inheritance --

    ' -- usingFor --

    ' -- vars --
	+[[address]] owner
	+[[uint256]] votingStartTime
	+[[uint256]] votingEndTime
	+[[bool]] isVotingStarted
	-[[uint256]] voterIdCounter
	-[[uint256]] candidateIdCounter
	+[[address]] winnerAddress
	+[[address]] candidateAddress
	#[[mapping address=>Candidate ]] candidates
	+[[address]] votersAddress
	#[[mapping address=>Voter ]] voters
	-[[address]] votedVoters
	#onlyDuringVotingPeriod {modifer}
	#onlyOwner {modifer}

    ' -- methods --
	+**__constructor__**()
	#🔍isUserexists(address  address, userArray address[])
	+addCandidate(_candidateAddress address, _name String, uint256 age, ipfs String) : void <<onlyOwner>>
	+🔍getAllCandidates() : Candidates[]
	+🔍getCandidatesLength() : uint256
	+🔍getSingleCandidateData(candidateAddress  address) : Candidate
	+addVoter(_voterAddress address, _name String, _age uint256, ipfs String): void <<onlyOwner>>
	+castVote(_candidateAddress address, _candidateId uint256) : void <<onlyDuringVotingPeriod>>
	+🔍getAllVoters() : Voter[] <<onlyOwner>>
	+🔍getVotersLength() : uint256
	+🔍getSingleVoter(_voterAddress address) : Voter <<onlyOwner>>
	+🔍getListOfVotedVoters(): votedVoters[] address <<onlyOwner>>
	+startVoting(votingDurationInMinutes uint256) : void <<onlyOwner>>
	+stopVoting() : void <<onlyOwner>>
	+🔍getWinner() : Candidate
	+resetVotingContract() : void <<onlyOwner>>
	+🔍getRemainingVotingTime() : uint256
	
	

}
' -- inheritance / usingFor --

@enduml